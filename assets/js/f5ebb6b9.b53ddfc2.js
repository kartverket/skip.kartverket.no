"use strict";(self.webpackChunkskip_docs=self.webpackChunkskip_docs||[]).push([[1886],{33316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"applikasjon-utrulling/github-actions/autentisering-med-workload-identity-federation","title":"Autentisering med Workload Identity Federation","description":"N\xe5r man bruker langlevde tokens til autentisering slik som f.eks. service account tokens er det en risiko for at disse blir lekket og blir en angrepsvektor inn mot infrastrukturen. Dette vil vi unng\xe5, og det er ogs\xe5 grunnen til at Google anbefaler \xe5 ikke bruke slike service account tokens til fordel for det som heter Workload Identity Federation der det er mulig. GitHub skriver om noen fordeler med \xe5 bruke dette i About security hardening with OpenID Connect .","source":"@site/docs/03-applikasjon-utrulling/08-github-actions/autentisering-med-workload-identity-federation.md","sourceDirName":"03-applikasjon-utrulling/08-github-actions","slug":"/applikasjon-utrulling/github-actions/autentisering-med-workload-identity-federation","permalink":"/docs/applikasjon-utrulling/github-actions/autentisering-med-workload-identity-federation","draft":false,"unlisted":false,"editUrl":"https://github.com/kartverket/skip-docs/edit/main/docs/03-applikasjon-utrulling/08-github-actions/autentisering-med-workload-identity-federation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83e\uddf0 GitHub Actions","permalink":"/docs/applikasjon-utrulling/github-actions/"},"next":{"title":"Bruk av Terraform","permalink":"/docs/applikasjon-utrulling/github-actions/bruk-av-terraform"}}');var o=n(74848),r=n(28453);const s={},a="Autentisering med Workload Identity Federation",u={},d=[{value:"Oppsett av GitHub Action",id:"oppsett-av-github-action",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"autentisering-med-workload-identity-federation",children:"Autentisering med Workload Identity Federation"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.img,{src:n(30098).A+"",width:"1405",height:"477"}),"\nN\xe5r man bruker langlevde tokens til autentisering slik som f.eks. service account tokens er det en risiko for at disse blir lekket og blir en angrepsvektor inn mot infrastrukturen. Dette vil vi unng\xe5, og det er ogs\xe5 grunnen til at Google anbefaler \xe5 ikke bruke slike service account tokens til fordel for det som heter Workload Identity Federation der det er mulig. GitHub skriver om noen fordeler med \xe5 bruke dette i ",(0,o.jsx)(t.a,{href:"https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect",children:"About security hardening with OpenID Connect"})," ."]}),"\n",(0,o.jsxs)(t.p,{children:["Kort oppsummert er Workload Identity Federation en m\xe5te \xe5 lese signerte JWT-er fra andre identity providers og bruke dette til \xe5 gi tilgang til service kontoer i GCP. Google forteller mer om dette her: ",(0,o.jsx)(t.a,{href:"https://cloud.google.com/iam/docs/workload-identity-federation",children:"https://cloud.google.com/iam/docs/workload-identity-federation"})]}),"\n",(0,o.jsx)(t.p,{children:"N\xe5r vi bruker GitHub Actions har GitHub en egen OIDC identity provider i stacken deres som vi kan ta i bruk. Vi kan da bruke OIDC identity provideren som ligger i GitHub stacken til \xe5 utstede en JWT som er signert av GitHub hver gang et bygg kj\xf8res. P\xe5 denne m\xe5ten kan SKIP vite at denne autentiseringsforesp\xf8rselen ble kj\xf8rt i tilknytning til bygget deres og gi dere de tilgangene som dere krever, for eksempel tilgang til \xe5 deploye til namespacet deres p\xe5 kubernetes. Da bruker man kun kortlevde n\xf8kler og unng\xe5r \xe5 bruke service account tokens med lang varighet som kan lekkes og bli en angrepsvektor for trusselakt\xf8rer inn mot infrastrukturen v\xe5r."}),"\n",(0,o.jsx)(t.h2,{id:"oppsett-av-github-action",children:"Oppsett av GitHub Action"}),"\n",(0,o.jsxs)(t.p,{children:["N\xe5r man skal sette opp autentisering mot GCP med Workload Identity Federation er det en fordel \xe5 ha lest gjennom GitHub sin artikkel om ",(0,o.jsx)(t.a,{href:"https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-google-cloud-platform#updating-your-github-actions-workflow",children:"https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-google-cloud-platform#updating-your-github-actions-workflow"})," , og spesifikt kapittelet som heter \u201cUpdating your GitHub Actions workflow\u201d. Her beskriver de de to trinnene man m\xe5 gj\xf8re:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Konfigurere tilgang til \xe5 generere ID-tokens"}),"\n",(0,o.jsxs)(t.li,{children:["Bruke ",(0,o.jsx)(t.a,{href:"https://github.com/google-github-actions/auth",children:"https://github.com/google-github-actions/auth"})," actionen til \xe5 autentisere mot GCP"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"SKIP-teamet vil ha konfigurert en workload identity provider og service account som dere kan putte rett inn i provideren over. Disse er ikke hemmelige men vil variere avhengig av milj\xf8 man skal deploye mot, s\xe5 det kan v\xe6re hensiktsmessig \xe5 ha de som variabler, som vist lenger nede."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"permissions:\n  contents: read\n  id-token: write\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - id: auth\n      name: Authenticate to GCP\n      uses: google-github-actions/auth@v0\n      with:\n        workload_identity_provider: projects/your-project-number/locations/global/workloadIdentityPools/your-pool/providers/your-provider\n        service_account: your-account@your-project.iam.gserviceaccount.com\n        project_id: kubernetes-dev-94b9\n\n"})}),"\n",(0,o.jsx)(t.p,{children:"Eventuelt kan du ha en egen setup-env jobb som lager outputs du kan bruke senere, slik at provider, service account og project id er variabler i stedet for hardkodede strings."}),"\n",(0,o.jsx)(t.p,{children:"Eksempel:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:'permissions:\n  contents: read\n  id-token: write\n\nenv:\n  PROJECT_ID: kubernetes-dev-94b9\n  SERVICE_ACCOUNT: your-account@your-project.iam.gserviceaccount.com\n  WORKLOAD_IDENTITY_PROVIDER: projects/your-project-number/locations/global/workloadIdentityPools/your-pool/providers/your-provider\n\njobs:\n  setup-env:\n    runs-on: ubuntu-latest\n    outputs:\n      project_id: ${{ steps.set-output.outputs.project_id }}\n      service_account: ${{ steps.set-output.outputs.service_account }}\n      workload_identity_provider: ${{ steps.set-output.outputs.workload_identity_provider }}\n    steps:\n      - name: Set outputs\n        id: set-output\n        run: |\n          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT\n          echo "service_account=$SERVICE_ACCOUNT" >> $GITHUB_OUTPUT\n          echo "workload_identity_provider=$WORKLOAD_IDENTITY_PROVIDER" >> $GITHUB_OUTPUT\n\n  build:\n    needs: [setup_env]\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - id: auth\n      name: Authenticate to GCP\n      uses: google-github-actions/auth@v0\n      with:\n        workload_identity_provider: ${{ needs.setup-env.outputs.workload_identity_provider }}\n        service_account: ${{ needs.setup-env.outputs.service_account }}\n        project_id: ${{ needs.setup-env.outputs.project_id }}\n\n  build-again:\n    needs: [setup_env]\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v2\n\n    - id: auth\n      name: Authenticate to GCP\n      uses: google-github-actions/auth@v0\n      with:\n        workload_identity_provider: ${{ needs.setup-env.outputs.workload_identity_provider }}\n        service_account: ${{ needs.setup-env.outputs.service_account }}\n        project_id: ${{ needs.setup-env.outputs.project_id }}\n\n'})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},30098:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/320504828-adfee03d90e5c8437e2d81127861f675.png"},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(96540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);