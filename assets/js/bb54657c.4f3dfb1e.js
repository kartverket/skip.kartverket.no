"use strict";(self.webpackChunkskip_docs=self.webpackChunkskip_docs||[]).push([[8633],{530:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"observability/distributed-tracing-with-tempo","title":"Distributed tracing with Tempo","description":"What is distributed tracing?","source":"@site/docs/07-observability/02-distributed-tracing-with-tempo.md","sourceDirName":"07-observability","slug":"/observability/distributed-tracing-with-tempo","permalink":"/docs/observability/distributed-tracing-with-tempo","draft":false,"unlisted":false,"editUrl":"https://github.com/kartverket/skip-docs/edit/main/docs/07-observability/02-distributed-tracing-with-tempo.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Metrikker","permalink":"/docs/observability/metrikker"},"next":{"title":"Dashboards","permalink":"/docs/observability/dashboard"}}');var r=i(74848),a=i(28453);const s={},o="Distributed tracing with Tempo",c={},d=[{value:"What is distributed tracing?",id:"what-is-distributed-tracing",level:2},{value:"What does SKIP offer?",id:"what-does-skip-offer",level:2},{value:"How do I get started?",id:"how-do-i-get-started",level:2},{value:"Instrumentation",id:"instrumentation",level:3},{value:"Example Dockerfile",id:"example-dockerfile",level:3},{value:"Runtime configuration",id:"runtime-configuration",level:3},{value:"View traces",id:"view-traces",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"distributed-tracing-with-tempo",children:"Distributed tracing with Tempo"})}),"\n",(0,r.jsx)(t.h2,{id:"what-is-distributed-tracing",children:"What is distributed tracing?"}),"\n",(0,r.jsx)(t.p,{children:"In complex (and distributed) systems there are at any time many ongoing parallel processes. Some of these are interlinked or trigger each other. In order to find out which operations that originate from the same request, it is common in many systems to have a so-called Trace ID. With modern distributed tracing this is standardized, and in addition sub-operations (spans) per Trace ID are also supported. When you use a standardized setup to trace applications you also gain access to a large and exciting toolbox."}),"\n",(0,r.jsx)(t.p,{children:"Further reading:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://zipkin.io/",children:"Zipkin"})," (interesting from a historical perspective)"]}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.honeycomb.io/getting-started/getting-started-distributed-tracing",children:"A general guide to getting started with distributed tracing"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"what-does-skip-offer",children:"What does SKIP offer?"}),"\n",(0,r.jsxs)(t.p,{children:["As part of our implementation of the LGTM stack, SKIP has chosen to offer ",(0,r.jsx)(t.a,{href:"https://grafana.com/oss/tempo/",children:"Grafana Tempo"})," as as service. This is a component that is fully integrated with the rest of this modern observability stack, and shares the same user interface and authentication as Grafana, Mimir and Loki."]}),"\n",(0,r.jsx)(t.h2,{id:"how-do-i-get-started",children:"How do I get started?"}),"\n",(0,r.jsx)(t.h3,{id:"instrumentation",children:"Instrumentation"}),"\n",(0,r.jsxs)(t.admonition,{type:"warning",children:[(0,r.jsx)(t.p,{children:"A known limitation in the way we have collected trace data is that we up until recently have had no way of excluding certain traces automatically. This means that all Prometheus scrapes (metrics collection) and automatic health checks will also be collected."}),(0,r.jsxs)(t.p,{children:["Now that issue ",(0,r.jsx)(t.a,{href:"https://github.com/grafana/agent/issues/4628",children:"#4628"}),"\nhas been implemented, this can finally be rectified. Follow ",(0,r.jsx)(t.a,{href:"https://kartverket.atlassian.net/browse/SKIP-1250",children:"SKIP-1250"})," for updates to when this is implemented in our setup."]})]}),"\n",(0,r.jsx)(t.p,{children:"In order to generate, propagate and send traces the application must be instrumented."}),"\n",(0,r.jsx)(t.p,{children:"Instrumentation can be achieved in several ways, of which 2 are relevant to us: manual and automatic instrumentation."}),"\n",(0,r.jsxs)(t.p,{children:["Manual instrumentation requires the use of a ",(0,r.jsx)(t.a,{href:"https://opentelemetry.io/docs/instrumentation/java/manual/",children:"library"})," which knows how a given integration behaves, and which enables it to connect to hooks in that integrations in order to generate new traces and/or spans if those do not already exist."]}),"\n",(0,r.jsx)(t.p,{children:"The other (and recommended) method is to use an automated approach. In the case of Java applications (the only type that has been tested as of now), you will need to bundle a java agent in your Docker image, as well as set up some extra configuration when the application is run (for example through Skiperator)."}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"It\u2019s worth mentioning that the Spring ecosystem offers a form of automatic instrumentation via Micrometer Tracing and OpenTelemetry OTLP exporters. Per october 2023 this is still under development and not considered a mature enough solution to utilize in our systems."})}),"\n",(0,r.jsx)(t.h3,{id:"example-dockerfile",children:"Example Dockerfile"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-dockerfile",children:'FROM alpine:3.18.3@sha256:c5c5fda71656f28e49ac9c5416b3643eaa6a108a8093151d6d1afc9463be8e33 AS builder\nARG OTEL_AGENT_VERSION=1.29.0\n\n# 1. Last ned p\xe5krevd java-agent\nRUN apk add --no-cache curl \\\n    && mkdir /agents \\\n    && curl -L https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v${OTEL_AGENT_VERSION}/opentelemetry-javaagent.jar > /agents/opentelemetry.jar\n\nADD build/distributions/gbok-run*.tar /gbok\n\nFROM eclipse-temurin:11-jdk-alpine\nCOPY cert/kartverket_root_ca.crt /usr/local/share/ca-certificates/kartverket_root_ca.crt\n\nENV USER_ID=150\nENV USER_NAME=apprunner\n\nRUN apk add --no-cache tzdata \\\n    && addgroup -g ${USER_ID} ${USER_NAME} \\\n    && adduser -u ${USER_ID} -G ${USER_NAME} -D ${USER_NAME} \\\n    && keytool -import -v -noprompt -trustcacerts -alias kartverketrootca -file /usr/local/share/ca-certificates/kartverket_root_ca.crt -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit\n\nENV TZ=Europe/Oslo\nCOPY --from=builder --chown=${USER_ID}:${USER_ID} /gbok /gbok\n# 2. Kopier inn nedlastet agent\nCOPY --from=builder --chown=${USER_ID}:${USER_ID} /agents /agents\n\nUSER ${USER_NAME}\nEXPOSE 8081\nENTRYPOINT ["sh", "-c", "/gbok/gbok-run*/bin/gbok-run"]\n'})}),"\n",(0,r.jsx)(t.h3,{id:"runtime-configuration",children:"Runtime configuration"}),"\n",(0,r.jsxs)(t.p,{children:["In order to use the Java agent, it needs to be configured and loaded. Through testing with Grunnboken, we have arrived at ",(0,r.jsx)(t.a,{href:"https://github.com/kartverket/digibok-apps/blob/879d3d34b4c1f6f28d961c59193cb965a922f71f/applications/gbok2.libsonnet#L6-L14",children:"the first version of configuration which can be seen here"})," ."]}),"\n",(0,r.jsxs)(t.p,{children:["When this configuration is done, it is then passed to ",(0,r.jsx)(t.code,{children:"JAVA_TOOL_OPTIONS"})," ",(0,r.jsx)(t.a,{href:"https://github.com/kartverket/digibok-apps/blob/879d3d34b4c1f6f28d961c59193cb965a922f71f/applications/gbok2.libsonnet#L38",children:"like this"})," ."]}),"\n",(0,r.jsxs)(t.p,{children:["There is currently no inbuilt mechanism in ",(0,r.jsx)(t.a,{href:"https://github.com/kartverket/argokit",children:"ArgoKit"})," to achieve this. We are open for PRs on this topic if anyone would like to contribute."]}),"\n",(0,r.jsx)(t.h3,{id:"view-traces",children:"View traces"}),"\n",(0,r.jsxs)(t.p,{children:["Traces can be viewed through our Grafana instance at ",(0,r.jsx)(t.a,{href:"https://monitoring.kartverket.cloud/",children:"monitoring.kartverket.cloud"})," . From here, choose ",(0,r.jsx)(t.strong,{children:"Explore"})," in the menu and then the correct ",(0,r.jsx)(t.strong,{children:"Tempo"})," data source corresponding to the environment you wish to view traces for."]}),"\n",(0,r.jsxs)(t.p,{children:["After that, you have the choice of using the ",(0,r.jsx)(t.strong,{children:"Search"})," (graphical build tool for queries) or ",(0,r.jsx)(t.strong,{children:"TraceQL"})," (manual query specification) tools."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.img,{alt:"The \u201cSearch\u201d tab is active, and fields have been filled through the use of dropdowns.",src:i(74457).A+"",width:"824",height:"375"}),"\nAbove: The \u201cSearch\u201d tab is active, and fields have been filled through the use of dropdowns."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.img,{alt:"The \u201cTraceQL\u201d tab lets you specify a user-defined query. Here is shown a query for \u201cgbok2-server\u201d traces, filtering out health checks",src:i(75627).A+"",width:"827",height:"263"}),"\nAbove: The \u201cTraceQL\u201d tab lets you specify a user-defined query. Here is shown a query for \u201cgbok2-server\u201d traces, filtering out health checks"]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},74457:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/temposearchtab-dbf1b835d8dfefc8d42c7980d8b7121e.png"},75627:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/tempotraceqltab-b1de5edc5aba241cdcf0c15fa2d05df6.png"},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>o});var n=i(96540);const r={},a=n.createContext(r);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);