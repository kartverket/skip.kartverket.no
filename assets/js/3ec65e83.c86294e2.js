"use strict";(self.webpackChunkskip_docs=self.webpackChunkskip_docs||[]).push([[4989],{28453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>a});var n=t(96540);const s={},i=n.createContext(s);function l(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(i.Provider,{value:r},e.children)}},48906:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/556138500-b01e0fa2c62e43571b472b6cce22d3f4.png"},57179:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"applikasjon-utrulling/argo-cd/hente-hemmeligheter-fra-hemmelighetsvelv","title":"Hente hemmeligheter fra hemmelighetshvelv","description":"Secrets","source":"@site/docs/03-applikasjon-utrulling/09-argo-cd/04-hente-hemmeligheter-fra-hemmelighetsvelv.md","sourceDirName":"03-applikasjon-utrulling/09-argo-cd","slug":"/applikasjon-utrulling/argo-cd/hente-hemmeligheter-fra-hemmelighetsvelv","permalink":"/docs/applikasjon-utrulling/argo-cd/hente-hemmeligheter-fra-hemmelighetsvelv","draft":false,"unlisted":false,"editUrl":"https://github.com/kartverket/skip-docs/edit/main/docs/03-applikasjon-utrulling/09-argo-cd/04-hente-hemmeligheter-fra-hemmelighetsvelv.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hvordan bruke Argo CD","permalink":"/docs/applikasjon-utrulling/argo-cd/hvordan-bruke-argocd"},"next":{"title":"Provisjonere infrastruktur med Crossplane","permalink":"/docs/applikasjon-utrulling/argo-cd/provisjonere-infrastruktur-med-crossplane"}}');var s=t(74848),i=t(28453);const l={},a="Hente hemmeligheter fra hemmelighetshvelv",o={},h=[{value:"Hvordan bruke External Secrets",id:"hvordan-bruke-external-secrets",level:2},{value:"SecretStore",id:"secretstore",level:2},{value:"Synkronisering av hemmeligheter: ExternalSecret og PushSecret",id:"synkronisering-av-hemmeligheter-externalsecret-og-pushsecret",level:2},{value:"ExternalSecret (Pull)",id:"externalsecret-pull",level:3},{value:"PushSecret (Push)",id:"pushsecret-push",level:3},{value:"Mounting av hemmelighet",id:"mounting-av-hemmelighet",level:3},{value:"Hva hindrer andre \xe5 hente min hemmelighet?",id:"hva-hindrer-andre-\xe5-hente-min-hemmelighet",level:3}];function c(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"hente-hemmeligheter-fra-hemmelighetshvelv",children:"Hente hemmeligheter fra hemmelighetshvelv"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.img,{alt:"Secrets",src:t(48906).A+"",width:"834",height:"483"}),"\nDe aller fleste applikasjoner har hemmeligheter den trenger \xe5 f\xe5 tilgang til. Dette kan for eksempel v\xe6re API-n\xf8kler og passord til databaser. Disse skal lagres p\xe5 en forsvarlig m\xe5te i et hemmelighetshvelv, og dette er beskrevet i sikkerhetsh\xe5ndboka under ",(0,s.jsx)(r.a,{href:"https://kartverket.atlassian.net/wiki/spaces/SIK/pages/499351621/Hemmeligheter",children:"Hemmeligheter"})," . N\xe5r hemmelighetene da ligger i hvelvet kommer sp\xf8rsm\xe5let om hvordan applikasjonen skal f\xe5 tak i dem, og det er der ExternalSecrets kommer inn."]}),"\n",(0,s.jsx)(r.p,{children:"External Secrets Operator (ESO) er en operator som kj\xf8rer i clusteret og har evnen til \xe5 hente hemmeligheter fra hvelv som Vault og Google Secret Manager (GSM). Disse blir synkronisert fra hvelvet til kubernetes secrets som kan mountes inn i podder. Synkroniseringen beskrives som en \u201cfra-til\u201d konfigurasjon hvor man sier hvor hemmelighetene ligger og hvordan de skal se ut n\xe5r de er synkronisert til Kubernetes."}),"\n",(0,s.jsx)(r.admonition,{type:"info",children:(0,s.jsxs)(r.p,{children:["Merk at External Secrets brukes til ",(0,s.jsx)(r.strong,{children:"deploy-time"})," uthenting av hemmeligheter. Hvis du har en applikasjon som kj\xf8rer og skal bruke hemmeligheter ",(0,s.jsx)(r.strong,{children:"runtime"})," b\xf8r du ikke bruke External Secrets og heller bruke biblioteker som ",(0,s.jsx)(r.a,{href:"https://spring.io/projects/spring-cloud-gcp",children:"https://spring.io/projects/spring-cloud-gcp"}),". Se ",(0,s.jsx)(r.a,{href:"/docs/applikasjon-utrulling/oppsett-og-bruk-av-secret-manager",children:"Oppsett og bruk av Secret Manager"}),"."]})}),"\n",(0,s.jsxs)(r.p,{children:["Mer om external secrets finnes p\xe5 ",(0,s.jsx)(r.a,{href:"https://external-secrets.io/v0.7.2/",children:"https://external-secrets.io/v0.7.2/"})," ."]}),"\n",(0,s.jsx)(r.h2,{id:"hvordan-bruke-external-secrets",children:"Hvordan bruke External Secrets"}),"\n",(0,s.jsxs)(r.p,{children:["ESO lytter i clusteret etter ",(0,s.jsx)(r.a,{href:"https://external-secrets.io/v0.7.2/api/externalsecret/",children:"ExternalSecret"})," - og ",(0,s.jsx)(r.a,{href:"https://external-secrets.io/v0.7.2/api/secretstore/",children:"SecretStore"})," -manifester. I det \xf8yeblikket disse blir plukket opp blir de lest som konfigurasjon for ESO og en synk mot hvelvet starter som vil ende opp med \xe5 opprette en Kubernetes Secret. Kubernetes Secreten vil ogs\xe5 synkroniseres regelmessig slik at man kan f.eks. rullere hemmeligheter ved \xe5 endre dem i hvelvet."]}),"\n",(0,s.jsx)(r.h2,{id:"secretstore",children:"SecretStore"}),"\n",(0,s.jsx)(r.p,{children:"SecretStore-manifestet definerer et hvelv, slik som Vault eller GSM, og m\xe5 settes opp f\xf8rst. Denne konfigurasjonen vil ogs\xe5 inneholde hvordan ESO skal autentisere seg og kan gjenbrukes av flere ExternalSecret-manifester. Disse settes typisk opp av et produktteam for deres namespace for \xe5 definere hvor de har lagret sine hemmeligheter."}),"\n",(0,s.jsxs)(r.p,{children:["Se ",(0,s.jsx)(r.a,{href:"https://external-secrets.io/v0.7.2/api/spec/#external-secrets.io/v1beta1.GCPSMProvider",children:"GCPSMProvider"})," for alle gyldige verdier."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"apiVersion: external-secrets.io/v1beta1\nkind: SecretStore\nmetadata:\n  name: gsm\nspec:\n  provider:\n    gcpsm:\n      projectID: <YOUR_PROJECT_ID>\n"})}),"\n",(0,s.jsx)(r.p,{children:"For at det skal v\xe6re lov \xe5 hente ut secrets m\xe5 i tillegg f\xf8lgende gj\xf8res:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["Man m\xe5 g\xe5 inn p\xe5 secreten som skal eksponeres til ESO og gi rollen ",(0,s.jsx)(r.code,{children:"roles/secretmanager.secretAccessor"})," til servicekontoen:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Dev - ",(0,s.jsx)(r.code,{children:"eso-secret-accessor@skip-dev-7d22.iam.gserviceaccount.com"})]}),"\n",(0,s.jsxs)(r.li,{children:["Prod - ",(0,s.jsx)(r.code,{children:"eso-secret-accessor@skip-prod-bda1.iam.gserviceaccount.com"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["Namespacene dere oppretter m\xe5 allowlistes for \xe5 kunne hente ut fra prosjektene deres, kontakt SKIP s\xe5 setter vi ",(0,s.jsx)(r.code,{children:"skip.kartverket.no/gcpProject"})," p\xe5 prosjektene deres og synkroniserer Argo p\xe5 nytt"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"synkronisering-av-hemmeligheter-externalsecret-og-pushsecret",children:"Synkronisering av hemmeligheter: ExternalSecret og PushSecret"}),"\n",(0,s.jsxs)(r.p,{children:["External Secrets Operator (ESO) tilbyr to prim\xe6re metoder for \xe5 h\xe5ndtere hemmeligheter: ",(0,s.jsx)(r.strong,{children:"pull"})," og ",(0,s.jsx)(r.strong,{children:"push"}),". Den vanligste metoden er \xe5 hente (pull) hemmeligheter fra et eksternt hvelv som Google Secret Manager til Kubernetes, men i noen tilfeller er det ogs\xe5 nyttig \xe5 kunne dytte (push) hemmeligheter fra Kubernetes til hvelvet."]}),"\n",(0,s.jsx)(r.h3,{id:"externalsecret-pull",children:"ExternalSecret (Pull)"}),"\n",(0,s.jsxs)(r.p,{children:["N\xe5r du har definert et hemmelighetshvelv med ",(0,s.jsx)(r.code,{children:"SecretStore"}),", kan du definere hvilke hemmeligheter som skal hentes ut. Dette gj\xf8res med ",(0,s.jsx)(r.code,{children:"ExternalSecret"}),"-manifestet, som refererer til et ",(0,s.jsx)(r.code,{children:"SecretStore"})," for \xe5 vite hvilken backend og autentisering som skal brukes. ESO vil bruke dette manifestet til \xe5 hente de definerte feltene fra den gitte hemmeligheten og putte dem inn i en Kubernetes ",(0,s.jsx)(r.code,{children:"Secret"})," i det formatet som blir spesifisert. Dette lar deg for eksempel mappe om navn p\xe5 n\xf8kler."]}),"\n",(0,s.jsxs)(r.p,{children:["I eksempelet under hentes en hemmelighet fra Google Secret Manager og synkroniseres inn som en Kubernetes ",(0,s.jsx)(r.code,{children:"Secret"}),"."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"apiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: dbpass\nspec:\n  # Refererer til SecretStore for autentisering mot Google Secret Manager\n  secretStoreRef:\n    kind: SecretStore\n    name: gsm-backend\n\n  # Definerer hvilke data som skal hentes\n  data:\n  - remoteRef:\n      # Navnet p\xe5 hemmeligheten i Google Secret Manager\n      key: db-pass\n    # N\xf8kkelen som skal brukes i Kubernetes Secret\n    secretKey: DB_PASSWORD\n\n  # Spesifiserer navnet p\xe5 Kubernetes Secret som skal opprettes\n  target:\n    name: dbpass\n\n  # Hvor ofte hemmeligheten skal synkroniseres\n  refreshInterval: 1h\n"})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"pushsecret-push",children:"PushSecret (Push)"}),"\n",(0,s.jsxs)(r.p,{children:["I motsetning til ",(0,s.jsx)(r.code,{children:"ExternalSecret"})," som ",(0,s.jsx)(r.em,{children:"henter"})," hemmeligheter, lar ",(0,s.jsx)(r.code,{children:"PushSecret"})," deg ",(0,s.jsx)(r.em,{children:"dytte"})," hemmeligheter fra Kubernetes til et eksternt hvelv som Google Secret Manager. Dette er nyttig n\xe5r en hemmelighet genereres inne i Kubernetes-klusteret \u2013 for eksempel et automatisk generert passord, en privat n\xf8kkel eller et token \u2013 og du \xf8nsker \xe5 lagre denne sikkert i et sentralt hvelv for gjenbruk, revisjon eller tilgang fra andre systemer."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"PushSecret"})," fungerer ved \xe5 overv\xe5ke en Kubernetes ",(0,s.jsx)(r.code,{children:"Secret"}),". N\xe5r denne ",(0,s.jsx)(r.code,{children:"Secret"}),"-en opprettes eller endres, vil ESO dytte dataene til den spesifiserte hemmeligheten i hvelvet."]}),"\n",(0,s.jsxs)(r.p,{children:["I eksempelet under vises hvordan man dytter en Kubernetes ",(0,s.jsx)(r.code,{children:"Secret"})," kalt ",(0,s.jsx)(r.code,{children:"my-app-secret"})," til Google Secret Manager."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"apiVersion: external-secrets.io/v1alpha1\nkind: PushSecret\nmetadata:\n  annotations:\n  name: push-secret-navn\n  namespace: app-namespace\n\nspec:\n  # Dette er secreten som pushes til i gsm.\n  data:\n  - conversionStrategy: None\n    match:\n      remoteRef:\n        remoteKey: gsm-secret\n  # Hvor ofte ESO skal sjekke om hemmeligheten har endret seg\n  refreshInterval: 10m\n  # Refererer til SecretStore for autentisering\n  secretStoreRefs:\n  - kind: SecretStore\n    name: gsm\n  # Velger hvilken Kubernetes Secret som skal overv\xe5kes og dyttes\n  selector:\n    secret:\n      name: kubernetes-secret\n"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Viktig:"})," For at ",(0,s.jsx)(r.code,{children:"PushSecret"})," skal fungere, m\xe5 Service Account-en som brukes av ",(0,s.jsx)(r.code,{children:"SecretStore"}),"-en ha skriverettigheter (f.eks. ",(0,s.jsx)(r.code,{children:"secretmanager.secretVersionAdder"}),") til hemmelighetene i Google Secret Manager."]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"mounting-av-hemmelighet",children:"Mounting av hemmelighet"}),"\n",(0,s.jsx)(r.p,{children:"N\xe5r ESO har synkronisert inn hemmeligheten og opprettet en Kubernetes Secret er det ofte slik at man \xf8nsker \xe5 bruke dette i en Pod. Vanligvis gjennom \xe5 mounte dette som milj\xf8variabler eller som en fil p\xe5 filsystemet, eksempelvis for sertfikater. Bruker man Skiperator er dette veldig rett frem."}),"\n",(0,s.jsxs)(r.p,{children:["Se ogs\xe5 ",(0,s.jsx)(r.a,{href:"https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-files-from-a-pod",children:"Using Secrets as files from a Pod"})," og ",(0,s.jsx)(r.a,{href:"https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",children:"Using Secrets as environment variables"})," , men merk at spec er annerledes med Skiperator."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"apiVersion: skiperator.kartverket.no/v1alpha1\nkind: Application\nmetadata:\n  name: teamname-frontend\nspec:\n  # Each key will be set as an env var with its value as the value\n  envFrom:\n  - secret: dbpass\n\n  # Each key will be created as a file with the key as filename and value as content\n  filesFrom:\n  - secret: dbpass\n    mountPath: /var/run/secret\n"})}),"\n",(0,s.jsx)(r.h3,{id:"hva-hindrer-andre-\xe5-hente-min-hemmelighet",children:"Hva hindrer andre \xe5 hente min hemmelighet?"}),"\n",(0,s.jsx)(r.p,{children:"Med External Secrets gis en sentral servicekonto tilgang til \xe5 hente ut hemmelighetene i GSM. Man skulle derfor tro at det var mulig for andre som bruker den samme servicekontoen \xe5 hente ut hemmeligheten. Det er ikke tilfellet og er l\xf8st med andre policies i clusteret."}),"\n",(0,s.jsx)(r.p,{children:"Ditt team oppretter en SecretStore, og det finnes policies i clusteret som s\xf8rger for at kun prosjekter som dere eier kan knyttes opp her. SecretStore-en er det som brukes for \xe5 hente fra GCP. Dermed er det kun prosjektet som ligger her som kan hentes fra, og kun ditt team som kan hente fra ditt prosjekt."})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);