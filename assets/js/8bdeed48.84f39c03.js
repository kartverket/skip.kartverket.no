"use strict";(self.webpackChunkskip_docs=self.webpackChunkskip_docs||[]).push([[1931],{45824:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"applikasjon-utrulling/github-actions/index","title":"\ud83e\uddf0 GitHub Actions","description":"Generelt","source":"@site/docs/03-applikasjon-utrulling/08-github-actions/index.md","sourceDirName":"03-applikasjon-utrulling/08-github-actions","slug":"/applikasjon-utrulling/github-actions/","permalink":"/docs/applikasjon-utrulling/github-actions/","draft":false,"unlisted":false,"editUrl":"https://github.com/kartverket/skip-docs/edit/main/docs/03-applikasjon-utrulling/08-github-actions/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd11 Auto-login","permalink":"/docs/applikasjon-utrulling/tilgangsstyring/auto-login"},"next":{"title":"Autentisering med Workload Identity Federation","permalink":"/docs/applikasjon-utrulling/github-actions/autentisering-med-workload-identity-federation"}}');var i=r(74848),s=r(28453);const o={},a="\ud83e\uddf0 GitHub Actions",l={},d=[{value:"Generelt",id:"generelt",level:2},{value:"Lagring av images",id:"lagring-av-images",level:2},{value:"Deployment",id:"deployment",level:2}];function g(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"-github-actions",children:"\ud83e\uddf0 GitHub Actions"})}),"\n",(0,i.jsx)(t.h2,{id:"generelt",children:"Generelt"}),"\n",(0,i.jsxs)(t.p,{children:["GitHub actions er GitHubs CI/CD-system. Med dette systemet kan man kj\xf8re bygg som er tett integrert med kodebasen og bruke et \xf8kosystem av integrasjoner og ferdiglagde actions via ",(0,i.jsx)(t.a,{href:"https://github.com/marketplace",children:"GitHub Marketplace"})," ."]}),"\n",(0,i.jsx)(t.p,{children:"Dere kommer til \xe5 m\xf8te p\xe5 en del forskjellige verkt\xf8y n\xe5r dere skal deploye til SKIP:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"SKIP er kj\xf8remilj\xf8et for containere i Kartverket. Vi regner ikke GitHub som en del av SKIP, men det er en s\xe5 sentral komponent i \xe5 deploye til SKIP-teamet er med \xe5 drifte GitHub-organisasjonen til Kartverket"}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://docs.github.com/en/actions/",children:"GitHub Actions"})," som er CI/CD-milj\xf8et for \xe5 kj\xf8re jobber som \xe5 bygge containere fra kildekode og kj\xf8re terraform plan og apply"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://kartverket.atlassian.net/wiki/spaces/SKIPDOK/pages/309952968/Bruk+av+Terraform+WIP",children:"Terraform"})," som er ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Infrastructure_as_code",children:"IaC"})," -verkt\xf8yet som lar oss beskrive det \xf8nskede milj\xf8et i kode og eksekverer kommandoer for \xe5 modifisere milj\xf8et slik at det blir slik som beskrevet"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kartverket/github-workflows",children:"github-workflows"})," som er gjenbrukbare jobber man kan bruke i sine pipelines for \xe5 gj\xf8re oppsettet lettere. Denne inneholder hovedsakelig den gjenbrukbare jobben \u201crun-terraform\u201d. Denne kan benyttes for \xe5 enkelt autentisere seg mot GCP og bruke terraform p\xe5 en sikker m\xe5te."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://cloud.google.com/",children:"Google Cloud"})," og ",(0,i.jsx)(t.a,{href:"https://cloud.google.com/anthos/",children:"Google Anthos"})," som er milj\xf8et som kj\xf8rer ",(0,i.jsx)(t.a,{href:"https://cloud.google.com/kubernetes-engine",children:"Kubernetes"})," -milj\xf8et hvor containerene kj\xf8rer"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kartverket/skiperator-poc",children:"skiperator"})," er en ",(0,i.jsx)(t.a,{href:"https://operatorframework.io/what/",children:"operator"})," som gj\xf8r det enklere \xe5 sette opp en applikasjon som f\xf8lger best practices. Skiperator definerer en Application custom resource som blir fylt ut av produktteamene og deployet med Terraform"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/kartverket/nacho-skip",children:"Nacho SKIP"})," signerer container images med en kryptografisk signatur etter de er bygget"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["GitHub Actions er et CI-systemet som SKIP legger opp til at alle produktteam skal kunne bruke for \xe5 automatisere bygging av Docker-images i tillegg til muligheter for \xe5 opprette infrastruktur i skyen ved hjelp av Terraform p\xe5 en automatisert m\xe5te.\n",(0,i.jsx)(t.img,{alt:"Choose workflow",src:r(99937).A+"",width:"1280",height:"1077"}),"\nActions lages ved \xe5 skrive YAML-filer i ",(0,i.jsx)(t.code,{children:".github/workflows"})," -mappa i roten av repoet. Man kan ogs\xe5 trykke p\xe5 \u201cActions\u201d og \u201cNew workflow\u201d i GitHub og f\xe5 opp dialogen over. Der kan man velge fra et eksisterende bibliotek med eksempler p\xe5 Actions som kan hjelpe med \xe5 komme i gang med en action. For eksempel kan man trykke \u201cView all\u201d p\xe5 \u201cContinous Integration\u201d for \xe5 finne eksempler p\xe5 hvordan man bygger med java eller node.js. DIsse er ofte gode utgangspunkt n\xe5r man skal sette opp et nytt bygg."]}),"\n",(0,i.jsxs)(t.p,{children:["Les ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions",children:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions"})," for en introduksjon til Actions."]}),"\n",(0,i.jsxs)(t.p,{children:["Se ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions",children:"https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions"})," for referanse av mulige verdier."]}),"\n",(0,i.jsx)(t.h2,{id:"lagring-av-images",children:"Lagring av images"}),"\n",(0,i.jsxs)(t.p,{children:["Det anbefalte m\xe5ten \xe5 publisere images er n\xe5 til GitHub Container Registry (",(0,i.jsx)(t.a,{href:"http://ghcr.io/",children:"ghcr.io"}),"). Dette kan gj\xf8res enkelt ved hjelp av GitHub Actions."]}),"\n",(0,i.jsxs)(t.p,{children:["Se denne artikkelen for mer informasjon om ghcr: ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry",children:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry"})," ."]}),"\n",(0,i.jsxs)(t.p,{children:["Eksempler for ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages",children:"publisering av container images til GitHub finnes her"})," ."]}),"\n",(0,i.jsxs)(t.p,{children:["Dersom dere bruker metoden over vil dere merke at dere ikke trenger \xe5 sette tags p\xe5 docker imaget dere bygger. Dette vil settes automatisk basert p\xe5 en \u201csane default\u201d ut i fra hvilke branch man er p\xe5 og hvilke kontekst bygget gj\xf8res i (commit, PR, tag). ",(0,i.jsx)(t.a,{href:"https://github.com/docker/metadata-action#basic",children:"De resulterende taggene er dokumentert her"})," . Tags kan ogs\xe5 tilpasses om ikke default er passende for prosjektet."]}),"\n",(0,i.jsx)(t.p,{children:"Resultatet blir \xe5 finne p\xe5 GitHub repositoriet til koden og ser slik ut:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"GH Repo",src:r(95967).A+"",width:"1103",height:"1021"})}),"\n",(0,i.jsxs)(t.p,{children:["Det er anbefalt \xe5 kj\xf8re skannere p\xe5 images som bygges f\xf8r de deployes. Da vil s\xe5rbarheter kunne vises i ",(0,i.jsx)(t.a,{href:"https://kartverket.dev/",children:"Utviklerportalen"}),". Se ",(0,i.jsx)(t.a,{href:"/docs/applikasjon-utrulling/github-actions/pharos",children:"Pharos"})," for \xe5 komme i gang med kodeskanning."]}),"\n",(0,i.jsx)(t.h2,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsxs)(t.p,{children:["For deployment brukes Argo CD som det dedikert deployment-verkt\xf8y. Se ",(0,i.jsx)(t.a,{href:"/docs/applikasjon-utrulling/argo-cd/",children:"Argo CD"})," for mer informasjon om hvordan man tar i bruk dette."]}),"\n",(0,i.jsxs)(t.p,{children:["Det vil finnes prosjekter som bruker Terraform, enten fordi de hadde oppstart f\xf8r Argo CD eller fordi de har spesielle behov som tilsier at de trenger Terraform. Disse prosjektene kan se p\xe5 ",(0,i.jsx)(t.a,{href:"/docs/applikasjon-utrulling/github-actions/bruk-av-terraform",children:"Bruk av Terraform"})," for videre dokumentasjon. For nye prosjekter anbefaler vi Argo CD."]})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},95967:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/306745536-26f9400baa578e963f53a08cbbc8aa9d.png"},99937:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/306905644-81e0f692415199b406f30d957b719919.png"},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(96540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);