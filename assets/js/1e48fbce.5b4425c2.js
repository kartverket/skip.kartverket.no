"use strict";(self.webpackChunkskip_docs=self.webpackChunkskip_docs||[]).push([[3861],{86447:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"applikasjon-utrulling/argo-cd/provisjonere-infrastruktur-med-crossplane","title":"Provisjonere infrastruktur med Crossplane","description":"Denne siden er et utkast og vil kunne forandre seg","source":"@site/docs/03-applikasjon-utrulling/09-argo-cd/05-provisjonere-infrastruktur-med-crossplane.md","sourceDirName":"03-applikasjon-utrulling/09-argo-cd","slug":"/applikasjon-utrulling/argo-cd/provisjonere-infrastruktur-med-crossplane","permalink":"/docs/applikasjon-utrulling/argo-cd/provisjonere-infrastruktur-med-crossplane","draft":false,"unlisted":false,"editUrl":"https://github.com/kartverket/skip-docs/edit/main/docs/03-applikasjon-utrulling/09-argo-cd/05-provisjonere-infrastruktur-med-crossplane.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hente hemmeligheter fra hemmelighetshvelv","permalink":"/docs/applikasjon-utrulling/argo-cd/hente-hemmeligheter-fra-hemmelighetsvelv"},"next":{"title":"ArgoCD Notifications","permalink":"/docs/applikasjon-utrulling/argo-cd/argocd-notifications"}}');var t=s(74848),a=s(28453);const o={},i="Provisjonere infrastruktur med Crossplane",l={},p=[{value:"Hvordan komme i gang",id:"hvordan-komme-i-gang",level:2},{value:"St\xf8ttede ressurser",id:"st\xf8ttede-ressurser",level:2},{value:"Oppsett",id:"oppsett",level:2},{value:"Tilgang til ressurser",id:"tilgang-til-ressurser",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"provisjonere-infrastruktur-med-crossplane",children:"Provisjonere infrastruktur med Crossplane"})}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsx)(r.p,{children:"Denne siden er et utkast og vil kunne forandre seg"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"Crossplane car",src:s(78e3).A+"",width:"533",height:"336"})}),"\n",(0,t.jsx)(r.p,{children:"N\xe5r man deployer en applikasjon til SKIP er det ogs\xe5 tilfeller hvor man \xf8nsker \xe5 provisjonere infrastruktur. For eksempel kan dette v\xe6re \xe5 opprette servicekontoer i GCP, lage hemmeligheter i Secret Manager eller sette opp tjenester som PubSub. Dette er noe som tidligere har v\xe6rt gjort med Terraform, og det er fremdeles mulig \xe5 gj\xf8re, men med GitOps finnes det enklere m\xe5ter \xe5 gj\xf8re det p\xe5 slik at man ikke trenger \xe5 kj\xf8re en egen GitHub Action for terraform-jobben."}),"\n",(0,t.jsxs)(r.p,{children:["P\xe5 SKIP har vi satt opp noe som heter ",(0,t.jsx)(r.a,{href:"https://www.crossplane.io/",children:"https://www.crossplane.io/"})," . Crossplane er kort sagt en m\xe5te \xe5 provisjonere infrastruktur p\xe5 samme m\xe5te som man deployer applikasjoner, med deklarative manifest-filer. Med Crossplane kan man for eksempel opprette databaser, lagringsb\xf8tter eller Servicekontoer i GCP ved \xe5 legge inn en fil i ",(0,t.jsx)(r.a,{href:"/docs/applikasjon-utrulling/argo-cd/hva-er-et-apps-repo",children:"apps-repoet"})," sitt."]}),"\n",(0,t.jsxs)(r.p,{children:["Se ogs\xe5 ",(0,t.jsx)(r.a,{href:"https://docs.crossplane.io/v1.11/getting-started/introduction/",children:"https://docs.crossplane.io/v1.11/getting-started/introduction/"})," for et dypdykk i hvordan Crossplane fungerer og er nyttig lesestoff n\xe5r man kommer i gang."]}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsx)(r.p,{children:"Crossplane er ganske nytt og \xe5 ta dette i bruk vil kreve samarbeid med SKIP-teamet"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"Crossplane diagram 01",src:s(7892).A+"",width:"1000",height:"587"})}),"\n",(0,t.jsxs)(r.p,{children:["Crossplane er ganske fleksibelt. SKIP kan for eksempel lage komposisjoner av flere ressurser som gj\xf8r at ting som f.eks. brannveggregler kan settes opp automatisk n\xe5r man lager en Cloud SQL-instans. Man kan ogs\xe5 bruke de innebygde ressursene i ",(0,t.jsx)(r.a,{href:"https://marketplace.upbound.io/providers/upbound/provider-gcp/v0.28.0/crds",children:"GCP provideren"})," direkte, og det anbefales \xe5 bli kjent med den provideren."]}),"\n",(0,t.jsx)(r.h2,{id:"hvordan-komme-i-gang",children:"Hvordan komme i gang"}),"\n",(0,t.jsxs)(r.p,{children:["La oss si vi har en applikasjon som er deployed med Argo CD og vi \xf8nsker \xe5 sette opp en database for denne applikasjonen med Cloud SQL. Da vil vi ha en mappestruktur i v\xe5rt ",(0,t.jsx)(r.a,{href:"/docs/applikasjon-utrulling/argo-cd/hva-er-et-apps-repo",children:"apps-repo"})," som ser slik ut:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-none",children:"dev/\n  namespace/\n    app.yaml # Skiperator-manifest for applikasjonen\n    db.yaml  # Crossplane-manifester for databasen p\xe5 GCP\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Det f\xf8rste steget er \xe5 f\xe5 autentisert mot GCP slik at Crossplane f\xe5r tilgang til \xe5 opprette ressurser i prosjektet deres. Dette gj\xf8res ved \xe5 kontakte SKIP og f\xe5 lagt inn mapping for prefikset deres i ",(0,t.jsx)(r.a,{href:"https://github.com/kartverket/skip-apps/blob/main/lib/argocd/argocd.libsonnet",children:"skip-apps"})," ."]}),"\n",(0,t.jsxs)(r.p,{children:["Deretter kan man opprette ressurser som er st\xf8ttet av SKIP dokumentert lenger ned. Crossplane st\xf8tter mye mer, se CRD-er i ",(0,t.jsx)(r.a,{href:"https://marketplace.upbound.io/providers/upbound/provider-gcp/v0.28.0/crds",children:"GCP provideren"})," , men det m\xe5 lages st\xf8tte for disse, se \u201cTilgang til ressurser\u201d."]}),"\n",(0,t.jsx)(r.p,{children:"For \xe5 provisjonere opp ressurser oppretter produktteamet manifester p\xe5 Kubernetes som blir lest av Crossplane. Et eksempel p\xe5 \xe5 opprette lagring (bucket)."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"apiVersion: skip.kartverket.no/v1alpha1\nkind: BucketInstance\nmetadata:\n  name: my-bucket\nspec:\n  parameters:\n    bucket:\n      name: dsa-test-bucket-123\n    serviceAccount:\n      name: crossplane-test\n      displayName: Testing Crossplane Integration\n"})}),"\n",(0,t.jsx)(r.p,{children:"Etter dette er lagt ut vil man kunne se status p\xe5 crossplane ressursene som et hvilket som helst annen kubernetes-ressurs."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"kubectl get bucketinstance\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Man kan ogs\xe5 bruke ",(0,t.jsx)(r.code,{children:"kubectl describe"})," for \xe5 hente ut events p\xe5 disse ressursene. Events sier mer om hva som skjer og er nyttig til feils\xf8king."]}),"\n",(0,t.jsxs)(r.p,{children:["Mer om feils\xf8king finnes p\xe5 ",(0,t.jsx)(r.a,{href:"https://docs.crossplane.io/knowledge-base/guides/troubleshoot/",children:"https://docs.crossplane.io/knowledge-base/guides/troubleshoot/"})," ."]}),"\n",(0,t.jsx)(r.h2,{id:"st\xf8ttede-ressurser",children:"St\xf8ttede ressurser"}),"\n",(0,t.jsx)(r.p,{children:"F\xf8lgende ressurser er st\xf8ttet for \xe5 provisjoneres med Crossplane i dag:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/kartverket/skip-apps/blob/main/bases/universal-crossplane/resources/bucket-example.yml",children:"Buckets (Lagring i Google Cloud Storage)"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/kartverket/skip-apps/blob/main/bases/universal-crossplane/resources/service-account-example.yml",children:"GCP Service Accounts"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/kartverket/skip-apps/blob/main/bases/universal-crossplane/resources/bucket-access-example.yml",children:"Bucket Access (Kubernetes SA to Bucket)"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/kartverket/skip-apps/blob/main/bases/universal-crossplane/resources/workloadidentity-example.yml",children:"Workload Identity (Kubernetes SA to GCP SA)"})}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"oppsett",children:"Oppsett"}),"\n",(0,t.jsxs)(r.p,{children:["For \xe5 komme i gang med Crossplane m\xe5 du gj\xf8re noe setup. Alle produktteam f\xe5r automatisk opprettet en servicekonto p\xe5 GCP som vil brukes av Crossplane til \xe5 autentisere mot GCP, og for at Crossplane skal f\xe5 brukt denne m\xe5 det ligge en secret i namespacet deres. For \xe5 f\xe5 inn denne kan dere opprette en secret ved hjelp av en ExternalSecret (se ",(0,t.jsx)(r.a,{href:"/docs/applikasjon-utrulling/argo-cd/hente-hemmeligheter-fra-hemmelighetsvelv",children:"Hente hemmeligheter fra hemmelighetshvelv"}),") som kopierer hemmeligheten fra Google Secret Manager inn i Kubernetes. Dette m\xe5 dere sette opp for hvert prefiks i ",(0,t.jsx)(r.code,{children:"<prefix>-main"})," mappen deres i apps-repoet:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"apiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: crossplane-secret\nspec:\n  refreshInterval: 1h\n  secretStoreRef:\n    name: gsm\n    kind: SecretStore\n  target:\n    name: crossplane-secret\n  data:\n  - secretKey: creds\n    remoteRef:\n      conversionStrategy: Default\n      decodingStrategy: None\n      key: crossplane-credentials\n      metadataPolicy: None\n"})}),"\n",(0,t.jsxs)(r.p,{children:["SKIP setter automatisk opp en ProviderConfig n\xe5r man f\xe5r knyttet sitt prefix i Argo CD mot GCP. Denne forutsetter en secret i ",(0,t.jsx)(r.code,{children:"-main"})," namespacet deres som heter ",(0,t.jsx)(r.code,{children:"crossplane-secret"})," . Hvis ikke denne secreten blir plukket opp s\xe5 h\xf8r med SKIP om knytningen til GCP mangler."]}),"\n",(0,t.jsx)(r.p,{children:"For \xf8vrig m\xe5 vi bruke JSON keys for GCP service kontoer her siden crossplane st\xf8tter ikke Workload Identity on-prem."}),"\n",(0,t.jsx)(r.h2,{id:"tilgang-til-ressurser",children:"Tilgang til ressurser"}),"\n",(0,t.jsx)(r.p,{children:"I utgangspunktet kan ikke produktteamene f\xe5 tilgang til crossplane CRD-er direkte ettersom disse ikke er namespaced-ressurser og produktteamene kun har tilgang til \xe5 opprette ressurser i sitt eget namespace. Dette betyr at SKIP m\xe5 opprette s\xe5kalte \u201cCompositions\u201d for hver ting som produktteamene skal kunne opprette gjennom Crossplane."}),"\n",(0,t.jsx)(r.p,{children:"Dersom du som utvikler p\xe5 et produktteam har et \xf8nske om \xe5 f.eks. kunne opprette en database eller provisjonere andre ressurser gjennom Crossplane som ikke allerede er st\xf8ttet m\xe5 det bestilles en ny Composition fra SKIP."}),"\n",(0,t.jsxs)(r.p,{children:["For at SKIP skal opprette en ny composition m\xe5 det lages en ",(0,t.jsx)(r.a,{href:"https://github.com/kartverket/skip-apps/blob/main/bases/universal-crossplane/resources/bucket-access-xrd.yaml",children:"XRD"})," og en ",(0,t.jsx)(r.a,{href:"https://github.com/kartverket/skip-apps/blob/main/bases/universal-crossplane/resources/bucket-composition.yaml",children:"composition"})," ."]}),"\n",(0,t.jsx)(r.p,{children:"Se st\xf8ttede ressurser over."})]})}function c(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7892:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/556433430-32d2ac8c84d29bcc537b7e1032362062.png"},78e3:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/556630024-25424812376adaa5463d73227076b972.png"},28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>i});var n=s(96540);const t={},a=n.createContext(t);function o(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);